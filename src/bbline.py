# bbline.py

import typer
from analysis import summary, hands_stats, street_loss, strong_hands
from core import parser

app = typer.Typer(add_completion=False, help="BBLine CLI ‚Äî –∏–º–ø–æ—Ä—Ç HH –∏ –æ—Ç—á—ë—Ç—ã –ø–æ Hero.")

@app.command("import")
def import_raw(path: str = typer.Argument("data/raw", help="–ü–∞–ø–∫–∞ —Å .txt –¥–ª—è –ø–∞—Ä—Å–∞")):
    """–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –≤—Å–µ .txt –∏–∑ –ø–∞–ø–∫–∏ (—Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ), –¥—É–±–ª–∏–∫–∞—Ç—ã –∏–≥–Ω–æ—Ä—è—Ç—Å—è."""
    parser.find_and_parse_all_txt_files(path)
    typer.echo("‚úÖ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!")

@app.command("report")
def report(
    kind: str = typer.Argument("summary", help="summary | position | action | hands | streets | strong | top_loss"),
    limit: int = typer.Option(10, "--limit", "-l", help="–õ–∏–º–∏—Ç –¥–ª—è —Ç–æ–ø-–æ—Ç—á—ë—Ç–æ–≤ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)"),
):
    """–ë—ã—Å—Ç—Ä—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ç—á—ë—Ç—ã –ø—Ä—è–º–æ –≤ –∫–æ–Ω—Å–æ–ª—å."""
    match kind:
        case "summary":
            summary.summary()
            summary.by_position()
            summary.by_action()
            summary.stack_timeline()
            summary.vpip_pfr()
        case "position":
            summary.by_position()
        case "action":
            summary.by_action()
        case "hands":
            hands_stats.main()
        case "streets":
            street_loss.main()
        case "strong":
            strong_hands.main()
        case "top_loss":
            summary.top_losing_hands(limit)
        case _:
            typer.echo("ü§î –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ—Ç—á—ë—Ç. –î–æ—Å—Ç—É–ø–Ω—ã–µ: summary, position, action, hands, streets, strong, top_loss")

@app.command("reset")
def reset_db(confirm: bool = typer.Option(False, "--confirm", prompt="–£–¥–∞–ª–∏—Ç—å –±–∞–∑—É?")):
    """–£–¥–∞–ª—è–µ—Ç –±–∞–∑—É bbline.sqlite (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)"""
    import os
    if confirm:
        try:
            os.remove("db/bbline.sqlite")
            typer.echo("üóëÔ∏è –ë–∞–∑–∞ —É–¥–∞–ª–µ–Ω–∞.")
        except FileNotFoundError:
            typer.echo("‚ùå –ë–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    else:
        typer.echo("–û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è.")

if __name__ == "__main__":
    app()
